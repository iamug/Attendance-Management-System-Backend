"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const HashManager_1 = __importDefault(require("../Support/HashManager"));
class HashManager extends HashManager_1.default {
    /**
     * Hash the given value.
     *
     * @param  string  value
     * @return string
     *
     * @throws \RuntimeException
     */
    make(value) {
        return this.driver().make(value);
    }
    /**
     * Check the given plain value against a hash.
     *
     * @param  string  value
     * @param  string  hashedValue
     * @return bool
     *
     * @throws \RuntimeException
     */
    check(value, hashedValue) {
        return this.driver().check(value, hashedValue);
    }
    /**
     * Gets the number of rounds used to encrypt the specified hash.
     * @param hash  — Hash to extract the used number of rounds from
     * @return number — Number of rounds used
     */
    getRounds(hash) {
        return this.driver().check(hash);
    }
    /**
     * Set the default password work factor.
     *
     * @param  number  rounds
     * @return this
     */
    setRounds(rounds) {
        return this.driver().setRounds(rounds);
    }
}
exports.default = new HashManager();
