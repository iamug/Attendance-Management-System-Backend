import Manager from "../Support/HashManager";
import Hasher from "./Hasher";
declare class HashManager extends Manager implements Hasher {
    /**
     * Hash the given value.
     *
     * @param  string  value
     * @return string
     *
     * @throws \RuntimeException
     */
    make(value: string): any;
    /**
     * Check the given plain value against a hash.
     *
     * @param  string  value
     * @param  string  hashedValue
     * @return bool
     *
     * @throws \RuntimeException
     */
    check(value: string, hashedValue: string): boolean;
    /**
     * Gets the number of rounds used to encrypt the specified hash.
     * @param hash  — Hash to extract the used number of rounds from
     * @return number — Number of rounds used
     */
    getRounds(hash: string): any;
    /**
     * Set the default password work factor.
     *
     * @param  number  rounds
     * @return this
     */
    setRounds(rounds: number): any;
}
declare const _default: HashManager;
export default _default;
//# sourceMappingURL=Hash.d.ts.map