import IRead from "../IRead";
import IWrite from "../IWrite";
declare abstract class NOSQLPD_repository implements IRead, IWrite {
    private readonly _collection;
    private columnName;
    private order;
    private sortBy;
    private _id;
    constructor(collection: any);
    getAll(sortBy?: {
        columnName: string;
        order: string;
    }, paginate?: {
        pageNumber: number;
        dataSize: number;
    }): Promise<object[]>;
    findBy(columnName: String, item: string | number): Promise<Array<object> | object>;
    findOne(whereArgs: object): Promise<object>;
    findMany(columnName: string, pointers: (string | number)[]): Promise<Array<object>>;
    create(item: any): Promise<object>;
    updateOne(id: number | string, item: object): Promise<object>;
    updateOneWhere(args: object, item: object): Promise<object>;
    updateMany(columnName: string, pointers: (string | number)[], item: object): Promise<boolean>;
    deleteById(id: string | number): Promise<boolean>;
    deleteWhere(condition: object): Promise<boolean>;
    deleteMany(columnName: string, pointers: (string | number)[]): Promise<boolean>;
}
export default NOSQLPD_repository;
//# sourceMappingURL=index.d.ts.map