'use strict';
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/*
 * expressweb-invalidArgument-exception
 *
 * (c) Alex Igbokwe <chukwuemekaigbokwe80@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
*/
const Exceptions_1 = __importDefault(require("./Exceptions"));
/**
 * Invalid argument exception is thrown when methods or functions
 * arguments are missing or wrong.
 *
 * @class InvalidArgumentException
 */
class InvalidArgumentException extends Exceptions_1.default.InvalidArgumentException {
    static get context() {
        return 'expresswebjs-errors';
    }
    /**
     * Throw exception when the parameter received is invalid
     * @param  {String} errorMessage
     * @param  {Mixed}  originalValue
     *
     * @return {InvalidArgumentException}
     */
    static invalidParameter(errorMessage, originalValue) {
        const message = originalValue !== undefined
            ? `${errorMessage} instead received ${typeof originalValue}`
            : errorMessage;
        return new this(message, 500, 'E_INVALID_PARAMETER', this.context);
    }
    /**
     * Invoke instance of current class with a custom message
     * status and error code
     * @param  {String} message
     * @param  {Number} [status = 500]
     * @param  {String} [code = E_INVALID_ARGUMENT]
     *
     * @return {InvalidArgumentException}
     */
    static invoke(message, status = 500, code = 'E_INVALID_ARGUMENT') {
        return new this(message, status, code, this.context);
    }
    /**
     * Throw an exception when there is a missing parameter
     * @param  {String} method
     * @param  {String} parameterName
     * @param  {String|Number} position
     *
     * @return {InvalidArgumentException}
     */
    static missingParameter(method, parameterName, position) {
        const message = `Missing parameter ${parameterName} expected by ${method} method as ${position} parameter`;
        return new this(message, 500, 'E_MISSING_PARAMETER', this.context);
    }
}
exports.default = InvalidArgumentException;
